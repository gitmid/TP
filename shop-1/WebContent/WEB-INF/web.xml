<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd" id="WebApp_ID" version="3.1">
  <display-name>shop-1</display-name>
  <welcome-file-list>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>
  <!-- 
  DispatcherServlet: MVC환경의 Controller 기능 
  *.shop 형식의 url 요청 시 호출되는 Controller 클래스 
  /WEB-INF/shop-1-servlet.xml 파일을 읽어서 컨테이너에 객체를 저장함  
    기본설정으로 '서블릿이름-servlet.xml'을 타겟으로 잡고있음. (변경 가능)
   -->
  <servlet>
  	<servlet-name>shop-1</servlet-name>
  	<servlet-class>
  		org.springframework.web.servlet.DispatcherServlet
  	</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>shop-1</servlet-name>
  	<url-pattern>*.shop</url-pattern>
  </servlet-mapping>
  <!-- 
  ContextLoaderListener: 기능적으로 서블릿의 보조 클래스
  /WEB-INF/applicationContext.xml에 설정된 객체들을 컨테이너에 저장함  
   -->
  <listener>
  	<listener-class>
  		org.springframework.web.context.ContextLoaderListener
  	</listener-class>
  </listener>
  <!-- 
  filter 설정 : request, response 객체를 변경 가능. 서블릿보다 먼저 호출 
   -->
  <filter>
  	<filter-name>CharacterEncodingFilter</filter-name>
  	<filter-class>
  		org.springframework.web.filter.CharacterEncodingFilter
  	</filter-class>
  	<init-param>
  		<param-name>encoding</param-name>
  		<param-value>euc-kr</param-value>
  	</init-param>
  	<init-param>
  		<param-name>forceEncoding</param-name>
  		<param-value>true</param-value>
  	</init-param>
  </filter>
  <!-- 모든 요청(/*)들을  CharacterEncodingFilter Filter에 매핑-->
  <filter-mapping>
  	<filter-name>CharacterEncodingFilter</filter-name>
  	<url-pattern>/*</url-pattern>
  </filter-mapping>
  
   <!-- 모든 요청(/*)들을  sitemesh Filter에 매핑-->
  <filter>
  	<filter-name>sitemesh</filter-name>
  	<filter-class>
  		com.opensymphony.sitemesh.webapp.SiteMeshFilter
  	</filter-class>
  </filter>
  <filter-mapping>
  	<filter-name>sitemesh</filter-name>
  	<url-pattern>/*</url-pattern>
  </filter-mapping>
</web-app>